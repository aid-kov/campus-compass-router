/// <reference path="../external-types/dijkstra.d.ts" />
import dijkstra from "dijkstrajs";
import { Node } from "./node";
import { OneWay } from "./Hallway";
import { StairOneWay } from "./StairOneWay";
export declare type HallConnectorsStructures<ForkName extends string, StairName extends string> = {
    nodes: {
        nodeId: Node<ForkName, StairName>;
        edgeLengthFromPreviousNodeInHallway: number;
    }[];
    oneWay: OneWay;
}[];
/**
 * @ignore
 * @param hallConnectors - an array of each hallway's array of nodes
 * @param stairConnections - an array of stairs, where each stair has
 * a list of nodes going from the top to the bottom
 * @param hallwayConnections - an array of the pairs of connected hallway nodes
 * @returns The graph to be used by getShortestPath
 */
export declare function getGraph<ForkName extends string, StairName extends string>(hallConnectorsStructures: HallConnectorsStructures<ForkName, StairName>, oneWayStaircases: Partial<Record<StairName, StairOneWay>>): dijkstra.Graph;
/**
 * @ignore
 * @param graph - A graph generated by getGraph
 * @param idFrom - The id of the node to start at
 * @param idTo - The id of the destination node
 * @returns An array of node IDs that represents the path from `idFrom` to
 * `idTo`.
 */
export declare function getShortestPath<ForkName extends string, StairName extends string>(graph: dijkstra.Graph, idFrom: Node<ForkName, StairName>, idTo: Node<ForkName, StairName>): Node<ForkName, StairName>[];
/**
 * @ignore
 * @param graph - a graph
 * @returns - Is this a connected graph?
 */
export declare function isConnectedGraph(graph: dijkstra.Graph): {
    connected: boolean;
    connectedSections: string[][];
};
