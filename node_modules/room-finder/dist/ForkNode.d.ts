/**
 * A ForkNode represents the node ID of a [[Fork]] (or [[Room]]). It can be
 * either a regular node or a reversed node.
 *
 * Note: when you need to provide a node ID for a Fork or Room, you can either
 * provide a string, which represents a **forward  node**, or use the
 * [[reverseConnection]] function to create a **reverse node**.
 */
export declare class ForkNode<ForkName extends string> {
    readonly name: ForkName;
    readonly reversed: boolean;
    readonly _type = "ForkNode";
    constructor(name: ForkName, reversed: boolean);
}
/**
 * @param node Either a string or a ForkNode
 * @returns a reversed version of the provided ForkNode
 */
export declare function reverseConnection<ForkName extends string>(node: ForkName | ForkNode<ForkName>): ForkNode<ForkName>;
/**
 * @ignore
 */
export declare function getConnection<ForkName extends string>(thing: ForkName | ForkNode<ForkName>): ForkNode<ForkName>;
