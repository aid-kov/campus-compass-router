import { StairNode } from "./StairNode";
import { ForkNode } from "./ForkNode";
import { BasicRoomNode } from "./BasicRoomNode";
export declare type Node<ForkName extends string, StairName extends string> = StairNode<StairName> | ForkNode<ForkName> | BasicRoomNode;
export declare type ConnectorNode<ForkName extends string, StairName extends string> = StairNode<StairName> | ForkNode<ForkName>;
export declare function isConnectorNode<ForkName extends string, StairName extends string>(node: Node<ForkName, StairName> | undefined): node is ConnectorNode<ForkName, StairName>;
/** @ignore */
export declare function serializeNode<ForkName extends string, StairName extends string>(node: Node<ForkName, StairName>): string;
/** @ignore */
export declare function nodeFromString<ForkName extends string, StairName extends string>(str: string): Node<ForkName, StairName>;
